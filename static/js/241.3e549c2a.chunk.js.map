{"version":3,"file":"static/js/241.3e549c2a.chunk.js","mappings":"wQAIe,SAASA,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAEhC,OAAOA,EAAKC,KAAI,YAAsE,IAAnEC,EAAkE,EAAlEA,aAAcC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,oBACzD,OAAO,gBAAIC,UAAU,YAAd,UACJJ,GAAe,gBACdI,UAAU,WACVC,IAAG,UALS,oCAKT,OAAiBL,GACpBM,IAAKL,KACH,gBACAG,UAAU,WACVC,IAAI,iEACJC,IAAKL,KACT,uBAAIA,KACJ,uBAAIE,KACJ,uCAAeD,QAXqBK,EAAAA,EAAAA,MAavC,GACF,C,aCfc,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAOH,GAAP,8EACrBD,GAAW,GADU,mBAGFK,EAAAA,EAAAA,IAAiBJ,GAHf,OAGfhB,EAHe,OAIrBa,EAAab,GAJQ,gDAMrBqB,QAAQC,IAAR,MANqB,yBAQrBP,GAAW,GARU,4EAAH,sDAWpBI,EAAeH,EAChB,GAAE,CAACA,KAGF,gBAAIV,UAAU,YAAd,UACGQ,IAAW,SAACS,EAAA,EAAD,IACU,IAArBX,EAAUY,SAAgB,SAAC,EAAD,CAAUxB,KAAMY,EAAUa,SAG1D,C","sources":["components/MovieDetails/Cast/CastItem/CastItem.jsx","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import { nanoid } from 'nanoid'\nimport React from 'react'\nimport './CastItem.css'\n\nexport default function CastItem({data}) {\n  const IMAGE_URL = 'https://images.tmdb.org/t/p/w500';\n  return data.map(({ profile_path, original_name, character, know_for_department }) => {\n    return <li className=\"cast-item\" key={nanoid()}>\n      {profile_path ? <img\n        className=\"cast-img\"\n        src={`${IMAGE_URL}${profile_path}`}\n        alt={original_name} />\n        : <img\n          className=\"cast-img\"  \n          src=\"https://sd.keepcalms.com/i-w600/keep-calm-poster-not-found.jpg\"\n          alt={original_name}></img>}\n      <p>{original_name}</p>\n      <p>{know_for_department}</p>\n      <p>Character: {character}</p>\n    </li>\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { fetchActorsMovie } from 'api/api'\nimport { useParams } from 'react-router'\nimport CastItem from './CastItem/CastItem';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Cast() {\n  const [movieCast, setMovieCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async (id) => {\n      setLoading(true)\n    try {\n      const data = await fetchActorsMovie(id);\n      setMovieCast(data)\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setLoading(false)\n    }\n    }\n    fetchMovieCast(id)\n  }, [id])\n\n  return (\n    <ul className=\"cast-list\">\n      {loading && <Loader />}\n      {movieCast.length !== 0 && <CastItem data={movieCast.cast} />}\n    </ul>\n  )\n}\n"],"names":["CastItem","data","map","profile_path","original_name","character","know_for_department","className","src","alt","nanoid","Cast","useState","movieCast","setMovieCast","loading","setLoading","id","useParams","useEffect","fetchMovieCast","fetchActorsMovie","console","log","Loader","length","cast"],"sourceRoot":""}