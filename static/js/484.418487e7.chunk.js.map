{"version":3,"file":"static/js/484.418487e7.chunk.js","mappings":"iRAOe,SAASA,IAAS,IAAD,EAC9B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAOhDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBX,GAAW,GACXI,EAAUI,GAFO,mBAIII,EAAAA,EAAAA,IAAgBJ,GAJpB,OAITK,EAJS,OAKfX,EAAUW,EAAKC,SALA,gDAOfhB,EAAS,EAAD,IAPO,yBASfE,GAAW,GATI,4EAAH,qDAYZQ,GACFG,GAEH,GAAE,CAACH,IAEJ,IAAMO,EAAY,mCAAG,WAAOC,GAAP,8EACnBA,EAAEC,iBAxByBC,EAyBTF,EAAEG,OAAOC,SAASjB,OAAOkB,MAvB3Cd,EAD4B,KAATW,EAAc,CAAEA,KAAAA,GAAS,CAAC,GAyB7ClB,GAAW,GAHQ,mBAKEY,EAAAA,EAAAA,IAAgBT,GALlB,OAKXU,EALW,OAMjBX,EAAUW,EAAKC,SANE,kDAQjBhB,EAAS,EAAD,IARS,yBAUjBE,GAAW,GAVM,+CAvBO,IAACkB,CAuBR,8BAAH,sDAkBlB,OACE,kBAAMI,UAAU,UAAhB,WACE,0BACE,kBAAMC,SAAUR,EAAhB,WACE,kBAAOS,SARM,SAACR,GACpBZ,EAAUY,EAAEG,OAAOE,MACpB,EAMsCI,KAAK,OAAOP,KAAK,SAASG,MAAOlB,KACpE,mBAAQmB,UAAU,aAAaG,KAAK,SAApC,0BAGA,gBAAIH,UAAU,cAAd,UACGvB,IAAW,SAAC2B,EAAA,EAAD,IACXzB,IAAU,SAAC0B,EAAA,EAAD,CAAYd,KAAMZ,IACV,IAAlBA,EAAO2B,SAAgB,kDACvB/B,IAAS,oDAIjB,C","sources":["pages/Movie/Movie.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { fetchQueryMovie } from 'api/api';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\nimport { useSearchParams } from 'react-router-dom';\nimport './Movie.css'\nimport Loader from 'components/Loader/Loader';\n\nexport default function Movie() {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const productName = searchParams.get(\"name\") ?? \"\";\n\n    const updateQueryString = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n    };\n  \n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoading(true)\n      setSearch(productName)\n      try {\n        const data = await fetchQueryMovie(productName);\n        setMovies(data.results)\n      } catch (e) {\n        setError(e)\n      } finally {\n        setLoading(false)\n      }\n    }\n    if (productName) {\n      fetchMovie();\n    }\n  }, [productName]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    updateQueryString(e.target.elements.search.value)\n    setLoading(true)\n    try {\n      const data = await fetchQueryMovie(search);\n      setMovies(data.results)\n    } catch (e) {\n      setError(e)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleChange = (e) => {\n    setSearch(e.target.value)\n  }\n  \n  return (\n    <main className=\"wrapper\">\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input onChange={handleChange} type=\"text\" name=\"search\" value={search}/>\n      <button className=\"search-btn\" type=\"submit\">Search</button>\n        </form>\n      </div>\n      <ul className=\"movies-list\">\n        {loading && <Loader />}\n        {movies && <MoviesItem data={movies} />}\n        {movies.length === 0 && <p>Sorry, movie not found</p>}\n        {error && <p>Unexpected error...</p>}\n      </ul>\n    </main>\n  )\n}\n"],"names":["Movie","useState","error","setError","loading","setLoading","movies","setMovies","search","setSearch","useSearchParams","searchParams","setSearchParams","productName","get","useEffect","fetchMovie","fetchQueryMovie","data","results","handleSubmit","e","preventDefault","name","target","elements","value","className","onSubmit","onChange","type","Loader","MoviesItem","length"],"sourceRoot":""}