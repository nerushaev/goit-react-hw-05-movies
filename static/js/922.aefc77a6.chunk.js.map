{"version":3,"file":"static/js/922.aefc77a6.chunk.js","mappings":"iRAQMA,EAAiB,SAAC,GACtB,OADuC,EAAfC,SACT,8BAChB,EAEc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAIQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfR,GAAW,GAFI,UAGMS,EAAAA,EAAAA,IAAkBJ,GAHxB,OAGTK,EAHS,OAIfN,EAASM,GAJM,gDAMfR,EAAS,EAAD,IANO,yBAQfF,GAAW,GARI,4EAAH,qDAWhBQ,GACD,GAAE,CAACH,IAEJ,IAAMM,GAAWC,EAAAA,EAAAA,MAIjB,OACE,kBAAMC,UAAU,UAAhB,WACE,iBAAKA,UAAU,OAAf,UACGd,IAAW,SAACe,EAAA,EAAD,IACXb,IAAS,mDACZ,mBAAQY,UAAU,UAAUE,QAPjB,kBAAMJ,EAAS,IAAf,EAOX,qBACCR,IACC,iBAAKU,UAAU,eAAf,WACA,gBAAKA,UAAU,cAAcG,IAAG,UAhCpB,oCAgCoB,OAAiBb,EAAMc,aAAeC,IAAI,MAC1E,iBAAKL,UAAU,mBAAf,WACA,uBAAIV,EAAMgB,kBACV,uCAAa,0BAAOhB,EAAMiB,eAC1B,2CAAiB,iBAAMP,UAAU,yBAAhB,SAA0CV,EAAMkB,mBACjE,qCAAW,iBAAMR,UAAU,yBAAhB,SAA0CV,EAAMmB,4BAI7D,SAAC,KAAD,CAAST,UAAWlB,EAAgB4B,GAAG,OAAvC,mBACA,SAAC,KAAD,CAASV,UAAWlB,EAAgB4B,GAAG,UAAvC,sBACA,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { fetchMovieDetails } from 'api/api';\nimport { useParams, useNavigate } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport './MovieDetails.css'\nimport { Outlet } from 'react-router';\nimport Loader from 'components/Loader/Loader';\n\nconst getActiveClass = ({ isActive }) => {\n  return isActive ? `film-link active` : `film-link`;\n}\n\nexport default function MovieDetails() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [state, setState] = useState(null);\n  const IMAGE_URL = 'https://images.tmdb.org/t/p/w500';\n\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true)\n        const result = await fetchMovieDetails(id);\n        setState(result)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    fetchMovie();\n  }, [id])\n\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(\"/\");\n\n  return (\n    <main className=\"wrapper\">\n      <div className=\"film\">\n        {loading && <Loader />}\n        {error && <p>Sorry, movie not found</p>}\n      <button className=\"go-back\" onClick={goBack}>Go back</button>\n      {state &&\n        <div className=\"film-wrapper\">\n        <img className=\"film-poster\" src={`${IMAGE_URL}${state.poster_path}`} alt=\"\" />\n        <div className=\"film-description\">\n        <p>{state.original_title}</p>\n        <p>Overview: <span>{state.overview}</span></p>\n        <p>Release date: <span className=\"film-description__span\">{state.release_date}</span></p>\n        <p>Rating: <span className=\"film-description__span\">{state.vote_average}</span></p>\n        </div>\n        </div>}\n      </div>\n      <NavLink className={getActiveClass} to=\"cast\">Cast</NavLink>\n      <NavLink className={getActiveClass} to=\"reviews\">Reviews</NavLink>\n      <Outlet />\n      </main>\n  )\n}\n"],"names":["getActiveClass","isActive","MovieDetails","useState","loading","setLoading","error","setError","state","setState","id","useParams","useEffect","fetchMovie","fetchMovieDetails","result","navigate","useNavigate","className","Loader","onClick","src","poster_path","alt","original_title","overview","release_date","vote_average","to"],"sourceRoot":""}