{"version":3,"file":"static/js/389.09c6fa4e.chunk.js","mappings":"wQAIe,SAASA,EAAT,GACb,OAD0C,EAAPC,KACvBC,KAAI,YAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxB,OAAO,gBAAIC,UAAU,eAAd,WACL,iBAAMA,UAAU,UAChB,eAAGA,UAAU,SAAb,qBAA+BF,MAC/B,uBAAIC,KACJ,iBAAMC,UAAU,YAJuBC,EAAAA,EAAAA,MAM1C,GACF,CCRc,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEJE,GAAmB,EAmBvB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAOJ,GAAP,iGAEFK,EAAAA,EAAAA,IAAkBL,GAFhB,OAEfV,EAFe,OAGrBS,EAAgBT,GAHK,gDAKrBgB,QAAQC,IAAR,MALqB,yDAAH,sDAQpBH,EAAeJ,EAChB,GAAE,CAACA,IAG+B,IAA/BF,EAAaU,gBACfN,GAAmB,IAInB,gBAAIR,UAAU,eAAd,UACGI,EAAaW,UAAW,SAAC,EAAD,CAAanB,KAAMQ,EAAaW,UACxDP,IAAoB,yDAG1B,C","sources":["components/MovieDetails/Reviews/ReviewsItem/ReviewsItem.jsx","components/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport React from 'react'\nimport './ReviewsItem.css'\n\nexport default function ReviewsItem({data}) {\n  return data.map(({author, content}) => {\n    return <li className=\"reviews-item\" key={nanoid()}>\n      <span className=\"line\"></span>\n      <p className=\"author\">Author: {author}</p>\n      <p>{content}</p>\n      <span className=\"line\"></span>\n    </li>\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { fetchReviewsMovie } from 'api/api'\nimport { useParams } from 'react-router'\nimport ReviewsItem from './ReviewsItem/ReviewsItem';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { id } = useParams();\n\n  let needErrorMessage = false;\n\n  useEffect(() => {\n    const fetchMovieCast = async (id) => {\n    try {\n      const data = await fetchReviewsMovie(id);\n      setMovieReviews(data)\n    } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchMovieCast(id)\n  }, [id])\n\n\n  if (movieReviews.total_results === 0) {\n    needErrorMessage = true;\n  }\n\n  return (\n    <ul className=\"reviews-list\">\n      {movieReviews.results && <ReviewsItem data={movieReviews.results} />}\n      {needErrorMessage && <p>Sorry, reviews not found...</p>}\n    </ul>\n  )\n}"],"names":["ReviewsItem","data","map","author","content","className","nanoid","Reviews","useState","movieReviews","setMovieReviews","id","useParams","needErrorMessage","useEffect","fetchMovieCast","fetchReviewsMovie","console","log","total_results","results"],"sourceRoot":""}